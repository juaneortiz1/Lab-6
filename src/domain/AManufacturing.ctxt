#BlueJ class context
comment0.target=AManufacturing
comment0.text=\r\n\ Esta\ es\ una\ clase\ se\ encarga\ de\ \u00EDntar\ una\ cuadricula\ seg\u00FAn\ lo\ que\ indique\ la\r\n\ variable\ size,\ pintando\ en\ esta\ objetos\ con\ diferentes\ comportamientos\ y\ atributos\r\n\ @author\:\ Sergio\ Gonzales\ -\ Juan\ Esteban\ Ortiz\r\n\ @version\:\ 10/10/2022\r\n
comment1.params=
comment1.target=AManufacturing()
comment1.text=\r\n\ Crea\ un\ Amanufacturing\r\n
comment10.params=r\ c
comment10.target=boolean\ inLatice(int,\ int)
comment10.text=\r\n\ Retorna\ true\ si\ llegase\ a\ estar\ ocupado\ por\ un\ objeto\ el\ espacio\ en\ la\r\n\ cuadricula\ actual\r\n\ @param\ r\r\n\ @param\ c\r\n
comment11.params=
comment11.target=void\ ticTac()
comment11.text=\r\n\ Metodo\ que\ funciona\ como\ una\ acci\u00F3n\ la\ cual\ hace\ que\ se\ recorra\ la\ \r\n\ cuadricula\ en\ busca\ de\ objetos\ tipo\ thing,al\ encontrarlos\ los\ acciona\ una\r\n\ vez\ con\ el\ metodo\ change\r\n
comment2.params=
comment2.target=int\ getSize()
comment2.text=\r\n\ Retorna\ el\ tama\u00F1o\ de\ la\ cuadricula\r\n
comment3.params=r\ c
comment3.target=Thing\ getThing(int,\ int)
comment3.text=\r\n\ Retorna\ una\ matriz\ tipo\ Thing\r\n\ @param\ r\r\n\ @param\ c\r\n
comment4.params=r\ c\ e
comment4.target=void\ setThing(int,\ int,\ Thing)
comment4.text=\r\n\ Establece\ un\ objeto\ Thing\ en\ una\ posicion\ de\ la\ matriz\ tipo\ Thing\r\n\ @param\ r\r\n\ @param\ c\r\n\ @param\ e\r\n
comment5.params=
comment5.target=void\ someThings()
comment5.text=\r\n\ Crea\ los\ objetos\ tipo\ Thing\ que\ inicialmente\ estaran\ en\ la\ cuadricula\r\n\ Amanufacturing\r\n
comment6.params=r\ c
comment6.target=int\ neighborsActive(int,\ int)
comment6.text=\r\n\ Retorna\ un\ numero\ que\ cuenta\ la\ cantidad\ de\ objetos\ activos\ alrededor\ del\r\n\ objeto\ actual\r\n
comment7.params=r\ c
comment7.target=int\ countActive(int,\ int)
comment7.text=\r\n\ Retorna\ un\ numero\ que\ cuenta\ la\ cantidad\ de\ objetos\ activos\ no\ null\ alrededor\ del\r\n\ objeto\ actual\r\n
comment8.params=r\ c
comment8.target=boolean\ getActiveS(int,\ int)
comment8.text=\r\n\ Retorna\ true\ si\ llegase\ a\ estar\ vacio\ el\ espacio\ dentro\ de\ la\ cuadricula\r\n\ actual,\ sino\ false\r\n\ @param\ r\r\n\ @param\ c\r\n
comment9.params=r\ c
comment9.target=boolean\ isEmpty(int,\ int)
numComments=12
